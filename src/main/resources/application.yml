spring:
  config:
    import: optional:file:.env[.properties]
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: 3aaae9b053b685f95900145c213f769f   # REST API 키
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URL}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: profile_nickname  # 동의 항목
            client-name: Kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        database-platform: org.hibernate.dialect.MySQLDialect
        default_batch_fetch_size: 100
#        show_sql: true
#        format_sql: true

token:
  secret: ${SECRET_KEY}

cloud:
  aws:
    s3:
      bucket: ${BUCKET_NAME_REVIEW}
    credentials:
      accessKey: ${AWS_S3_ACCESS_KEY}
      secretKey: ${AWS_S3_SECRET_KEY}
    region:
      static: ${AWS_REGION}
      auto: false
    stack:
      auto: false

presignedUrlDuration: ${PRESIGNED_URL_DURATION}
kakaoAdminKey: ${KAKAO_ADMIN_KEY}

store:
  image:
    siVillage: ${STORE_IMAGE_SIVILLAGE}
    lotteOn: ${STORE_IMAGE_LOTTEON}
    kurly: ${STORE_IMAGE_KURLY}
    lg: ${STORE_IMAGE_LG}